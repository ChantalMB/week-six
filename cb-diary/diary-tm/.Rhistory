coord_flip() +
facet_wrap(~ document, ncol = N)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$month), mean)
print(month)
print(cb$month)
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
print(vizDataFrame)
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
print(vizDataFrame$month)
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
vizDataFrame <- factor(vizDataFrame$month, levels = vizDataFrame$month[order(vizDataFrame$variable)])
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
vizDataFrame <- factor(vizDataFrame$month, levels = vizDataFrame$month[order(12)])
print(vizDataFrame$month)
# put the data into a dataframe just for our visualization
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
# put the data into a dataframe just for our visualization
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
print(vizDataFrame)
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(data.frame(topic_proportion_in_year, id.vars = "month"))
vizDataFrame <- factor(vizDataFrame$month, levels = vizDataFrame$month[order(12)])
print(vizDataFrame$month)
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- data.frame(topic_proportion_in_year, id.vars = "month")
vizDataFrame <- factor(vizDataFrame$month, levels = vizDataFrame$month[order(12)])
print(vizDataFrame$month)
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
print(vizDataFrame$month)
# FOR TM OVER TIME
print(cb$month)
print(month)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$month), mean)
print(topic_proportion_in_year)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = cb$month, mean)
# FOR TM OVER TIME
print(class(cb$month))
month <- list()
for(i in cb$month){
print(i)
}
month <- list()
month <- cb$month
print(month)
print(class(month))
month <- list()
month <- (month = cb$month)
print(month)
print(class(month))
# FOR TM OVER TIME
print(class(cb$month))
month <- list()
for(i in cb$month){
m <- paste(i, sep = "")
month <- c(month, m)
}
print(month)
print(class(month))
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, mean)
print(theta)
print(length(theta))
print(length(mean))
month <- list(month = cb$month)
print(month)
print(class(month))
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, mean)
# set topic names to aggregated columns
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
print(vizDataFrame$month)
# plot topic proportions per deacde as bar plot
require(pals)
ggplot(vizDataFrame, aes(x=reorder(month), y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(vizDataFrame, aes(x=month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
print(topic_proportion_in_year)
print(class(month))
print(month)
print(topic_proportion_in_year)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = order(month), mean)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = c(month), mean)
print(topic_proportion_in_year)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, mean[1])
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, mean)
topic_proportion_in_year[match(reorder,topic_proportion_in_year$month),]
(print(topic_proportion_in_year$month))
print(class(topic_proportion_in_year$month))
month <- list(month = cb$month)
print(month)
print(class(month))
reorder <- c(month)
with(vizDataFrame, aggregate(theta,
by = list(month = factor(cb$month, levels = reorder)),
FUN = mean))
print(topic_proportion_in_year)
print(reorder)
print(vizDataFrame)
reorder <- c(month)
with(topic_proportion_in_year, aggregate(theta,
by = list(month = factor(cb$month, levels = reorder)),
FUN = mean))
print(topic_proportion_in_year)
with(topic_proportion_in_year, aggregate(theta,
by = list(month = factor(cb$month, levels = reorder)),
FUN = mean))
month <- factor(cb$month, levels = c(cb$month))
month <- list(month = cb$month)
month <- factor(month, levels = c(month))
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, mean)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, data = month, mean)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, data = month, FUN= mean)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, FUN= mean)
print(class(month))
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, FUN= mean)
topic_proportion_in_year[order(cb$month), ]
topic_proportion_in_year[order(month), ]
print(topic_proportion_in_year)
topic_proportion_in_year[order(topic_proportion_in_year$month), ]
topic_proportion_in_year[reorder(topic_proportion_in_year$month), ]
# libraries
library(tidyverse)
library(tidytext)
# cb = chapbooks
cb  <- read_csv("diary.csv")
cb_df <- tibble(id = cb$entry, date = cb$date, text = (str_remove_all(cb$text, "[0-9]")))
View(cb_df)
tidy_cb <- cb_df %>%
unnest_tokens(word, text)
data(stop_words)
# delete stopwords from our data
tidy_cb <- tidy_cb %>%
anti_join(stop_words)
# this line might take a few moments to run btw
cb_words <- tidy_cb %>%
count(id, word, sort = TRUE)
head(cb_words)
# turn that into a matrix
dtm <- cb_words %>%
cast_dtm(id, word, n)
require(topicmodels)
# number of topics
K <- 20
# set random number generator seed
# for purposes of reproducibility
set.seed(9161)
# compute the LDA model, inference via 1000 iterations of Gibbs sampling
topicModel <- LDA(dtm, K, method="Gibbs", control=list(iter = 500, verbose = 25))
# have a look a some of the results (posterior distributions)
tmResult <- posterior(topicModel)
# format of the resulting object
attributes(tmResult)
# lengthOfVocab
ncol(dtm)
# topics are probability distributions over the entire vocabulary
beta <- tmResult$terms   # get beta from results
dim(beta)
# for every document we have a probability distribution of its contained topics
theta <- tmResult$topics
dim(theta)
top5termsPerTopic <- terms(topicModel, 5)
topicNames <- apply(top5termsPerTopic, 2, paste, collapse=" ")
topicNames
# load libraries for visualization
library("reshape2")
library("ggplot2")
# FOR PATTERNSS
exampleIds <- c(2, 100, 200)
N <- length(exampleIds)
# get topic proportions form example documents
topicProportionExamples <- theta[exampleIds,]
colnames(topicProportionExamples) <- topicNames
# put the data into a dataframe just for our visualization
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
# specify the geometry, aesthetics, and data for a plot
ggplot(data = vizDataFrame, aes(topic, value, fill = document), ylab = "proportion") +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
facet_wrap(~ document, ncol = N)
# cb = chapbooks
cb  <- read_csv("diary.csv")
cb_df <- tibble(id = cb$entry, date = cb$date, text = (str_remove_all(cb$text, "[0-9]")))
View(cb_df)
tidy_cb <- cb_df %>%
unnest_tokens(word, text)
data(stop_words)
# delete stopwords from our data
tidy_cb <- tidy_cb %>%
anti_join(stop_words)
# this line might take a few moments to run btw
cb_words <- tidy_cb %>%
count(id, word, sort = TRUE)
head(cb_words)
# turn that into a matrix
dtm <- cb_words %>%
cast_dtm(id, word, n)
require(topicmodels)
# number of topics
K <- 10
# set random number generator seed
# for purposes of reproducibility
set.seed(9161)
# compute the LDA model, inference via 1000 iterations of Gibbs sampling
topicModel <- LDA(dtm, K, method="Gibbs", control=list(iter = 500, verbose = 25))
# have a look a some of the results (posterior distributions)
tmResult <- posterior(topicModel)
# format of the resulting object
attributes(tmResult)
# lengthOfVocab
ncol(dtm)
# topics are probability distributions over the entire vocabulary
beta <- tmResult$terms   # get beta from results
dim(beta)
# for every document we have a probability distribution of its contained topics
theta <- tmResult$topics
dim(theta)
top5termsPerTopic <- terms(topicModel, 5)
topicNames <- apply(top5termsPerTopic, 2, paste, collapse=" ")
topicNames
# load libraries for visualization
library("reshape2")
library("ggplot2")
# FOR PATTERNSS
exampleIds <- c(2, 100, 200)
N <- length(exampleIds)
# get topic proportions form example documents
topicProportionExamples <- theta[exampleIds,]
colnames(topicProportionExamples) <- topicNames
# put the data into a dataframe just for our visualization
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
# specify the geometry, aesthetics, and data for a plot
ggplot(data = vizDataFrame, aes(topic, value, fill = document), ylab = "proportion") +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
facet_wrap(~ document, ncol = N)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = month, mean)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$month), mean)
# number of topics
K <- 15
# set random number generator seed
# for purposes of reproducibility
set.seed(9161)
# compute the LDA model, inference via 1000 iterations of Gibbs sampling
topicModel <- LDA(dtm, K, method="Gibbs", control=list(iter = 500, verbose = 25))
# have a look a some of the results (posterior distributions)
tmResult <- posterior(topicModel)
# format of the resulting object
attributes(tmResult)
# lengthOfVocab
ncol(dtm)
# topics are probability distributions over the entire vocabulary
beta <- tmResult$terms   # get beta from results
dim(beta)
# for every document we have a probability distribution of its contained topics
theta <- tmResult$topics
dim(theta)
top5termsPerTopic <- terms(topicModel, 5)
topicNames <- apply(top5termsPerTopic, 2, paste, collapse=" ")
topicNames
# load libraries for visualization
library("reshape2")
library("ggplot2")
# FOR PATTERNSS
exampleIds <- c(2, 100, 200)
N <- length(exampleIds)
# get topic proportions form example documents
topicProportionExamples <- theta[exampleIds,]
colnames(topicProportionExamples) <- topicNames
# put the data into a dataframe just for our visualization
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
# specify the geometry, aesthetics, and data for a plot
ggplot(data = vizDataFrame, aes(topic, value, fill = document), ylab = "proportion") +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
facet_wrap(~ document, ncol = N)
# get mean topic proportions per decade
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$month), mean)
# set topic names to aggregated columns
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
# reshape data frame, for when I get the topics over time thing sorted
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
print(vizDataFrame$month)
# plot topic proportions per deacde as bar plot
require(pals)
ggplot(vizDataFrame, aes(x=month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
library(tidytext)
library("reshape2")
library("ggplot2")
cb  <- read_csv("diary.csv")
cb_df <- tibble(id = cb$entry, date = cb$date, text = (str_remove_all(cb$text, "[0-9]")))
tidy_cb <- cb_df %>%
unnest_tokens(word, text)
data(stop_words)
tidy_cb <- tidy_cb %>%
anti_join(stop_words)
cb_words <- tidy_cb %>%
count(id, word, sort = TRUE)
dtm <- cb_words %>%
cast_dtm(id, word, n)
require(topicmodels)
K <- 10
set.seed(9161)
topicModel <- LDA(dtm, K, method="Gibbs", control=list(iter = 500, verbose = 25))
tmResult <- posterior(topicModel)
attributes(tmResult)
ncol(dtm)
beta <- tmResult$terms
dim(beta)
theta <- tmResult$topics
dim(theta)
top5termsPerTopic <- terms(topicModel, 5)
topicNames <- apply(top5termsPerTopic, 2, paste, collapse=" ")
topicNames
# patterns in text
# tried to sample data evenly from throughout year --> randomly picked entries from csv
exampleIds <- c(57, 169, 317)
N <- length(exampleIds)
topicProportionExamples <- theta[exampleIds,]
colnames(topicProportionExamples) <- topicNames
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
ggplot(data = vizDataFrame, aes(topic, value, fill = document), ylab = "proportion") +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
facet_wrap(~ document, ncol = N)
library(tidyverse)
library(tidytext)
library("reshape2")
library("ggplot2")
cb  <- read_csv("diaryn.csv")
cb_df <- tibble(id = cb$entry, date = cb$date, text = (str_remove_all(cb$text, "[0-9]")))
tidy_cb <- cb_df %>%
unnest_tokens(word, text)
data(stop_words)
tidy_cb <- tidy_cb %>%
anti_join(stop_words)
cb_words <- tidy_cb %>%
count(id, word, sort = TRUE)
dtm <- cb_words %>%
cast_dtm(id, word, n)
require(topicmodels)
K <- 15
set.seed(9161)
topicModel <- LDA(dtm, K, method="Gibbs", control=list(iter = 500, verbose = 25))
tmResult <- posterior(topicModel)
attributes(tmResult)
ncol(dtm)
beta <- tmResult$terms
dim(beta)
theta <- tmResult$topics
dim(theta)
top5termsPerTopic <- terms(topicModel, 5)
topicNames <- apply(top5termsPerTopic, 2, paste, collapse=" ")
topicNames
# patterns in text
# tried to sample data evenly from throughout year --> randomly picked entries from csv
exampleIds <- c(57, 169, 317)
N <- length(exampleIds)
topicProportionExamples <- theta[exampleIds,]
colnames(topicProportionExamples) <- topicNames
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
ggplot(data = vizDataFrame, aes(topic, value, fill = document), ylab = "proportion") +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
facet_wrap(~ document, ncol = N)
# tm over time
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$month), mean)
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
# tm over time
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$n_month), mean)
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "n_month")
require(pals)
ggplot(vizDataFrame, aes(x=month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
require(pals)
ggplot(vizDataFrame, aes(x=n_month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(vizDataFrame, aes(x=month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# tm over time
topic_proportion_in_year <- aggregate(theta, by = list(n_month = cb$n_month), mean)
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "n_month")
require(pals)
ggplot(vizDataFrame, aes(x=month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# tm over time
topic_proportion_in_year <- aggregate(theta, by = list(n_month = cb$n_month), mean)
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "n_month")
require(pals)
ggplot(vizDataFrame, aes(x=n_month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(vizDataFrame, aes(x=n_month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month") +
theme(axis.text.x = element_text(angle = 110, hjust = 1))
ggplot(vizDataFrame, aes(x=n_month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
# tm over time
topic_proportion_in_year <- aggregate(theta, by = list(n_month = cb$n_month), mean)
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "n_month")
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "n_month")
require(pals)
ggplot(vizDataFrame, aes(x=n_month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "n_month", labs = "month") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
cb  <- read_csv("diary.csv")
cb_df <- tibble(id = cb$entry, date = cb$date, text = (str_remove_all(cb$text, "[0-9]")))
# tm over time
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$month), mean)
cb  <- read_csv("diary.csv")
cb_df <- tibble(id = cb$entry, date = cb$date, text = (str_remove_all(cb$text, "[0-9]")))
tidy_cb <- cb_df %>%
unnest_tokens(word, text)
data(stop_words)
tidy_cb <- tidy_cb %>%
anti_join(stop_words)
cb_words <- tidy_cb %>%
count(id, word, sort = TRUE)
dtm <- cb_words %>%
cast_dtm(id, word, n)
require(topicmodels)
K <- 15
set.seed(9161)
topicModel <- LDA(dtm, K, method="Gibbs", control=list(iter = 500, verbose = 25))
tmResult <- posterior(topicModel)
attributes(tmResult)
ncol(dtm)
beta <- tmResult$terms
dim(beta)
theta <- tmResult$topics
dim(theta)
top5termsPerTopic <- terms(topicModel, 5)
topicNames <- apply(top5termsPerTopic, 2, paste, collapse=" ")
topicNames
# patterns in text
# tried to sample data evenly from throughout year --> randomly picked entries from csv
exampleIds <- c(57, 169, 317)
N <- length(exampleIds)
topicProportionExamples <- theta[exampleIds,]
colnames(topicProportionExamples) <- topicNames
vizDataFrame <- melt(cbind(data.frame(topicProportionExamples), document = factor(1:N)), variable.name = "topic", id.vars = "document")
ggplot(data = vizDataFrame, aes(topic, value, fill = document), ylab = "proportion") +
geom_bar(stat="identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() +
facet_wrap(~ document, ncol = N)
# tm over time
topic_proportion_in_year <- aggregate(theta, by = list(month = cb$month), mean)
colnames(topic_proportion_in_year)[2:(K+1)] <- topicNames
vizDataFrame <- melt(topic_proportion_in_year, id.vars = "month")
require(pals)
ggplot(vizDataFrame, aes(x=month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "month", labs = "month") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(vizDataFrame, aes(x=month, y=value, fill=variable)) +
geom_bar(stat = "identity") + ylab("proportion") +
scale_fill_manual(values = paste0(alphabet(15), "FF"), name = "month") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
